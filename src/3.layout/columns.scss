@use "sass:math";

$column-num: 12 !default;
$column-gap: 1rem;

/*

I don't think there is almost ever a scenario when you want columns to be flex
if and only if it's smaller. Working with that assumption, `columns
is-desktop` defines that you want it to only begin being a columns after the
desktop breakpoint.

*/

.columns {
  display: flex;
  flex-wrap: wrap;

	margin: math.div(-$column-gap, 2);

  &.is-centered {
    justify-content: center;
  }

  &.is-vcentered {
    align-items: center;
  }

  &.is-not-wrapped {
    flex-wrap: nowrap;
  }

  @each $name, $bp in $breakpoints {
    @include lt($bp) {
      &.is-#{$name} {
        display: block;
      }
    }
  }
}

.column {
  box-sizing: border-box;
  display: block;
  box-sizing: border-box;
  flex-basis: 0;
  flex-grow: 1;
  flex-shrink: 1;
	padding: math.div($column-gap, 2);

  @for $i from 1 through $column-num {
    &.is-#{$i} {
      flex: none;
      width: math.div($i, $column-num) * 100%;
    }
    &.is-offset-#{$i} {
      margin-left: math.div($i, $column-num) * 100%;
    }
  }

  @each $name, $bp in $breakpoints {
    @include gt($bp) {
      @for $i from 1 through $column-num {
        &.is-#{$i}-#{$name} {
          flex: none;
          width: math.div($i, $column-num) * 100%;
        }
        &.is-offset-#{$i}-#{$name} {
          margin-left: math.div($i, $column-num) * 100%;
        }
      }
    }
  }
}
